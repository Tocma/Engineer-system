package util;

/**
 * システム全体で使用されるメッセージを定義する列挙型クラス。
 * バリデーションエラーメッセージやダイアログメッセージを一元管理し、
 * メッセージの一貫性を保ちます。
 * 
 * <p>
 * メッセージは以下のカテゴリに分類されます：
 * </p>
 * <ul>
 * <li>バリデーションエラーメッセージ: VALIDATION_ERROR_で始まるもの</li>
 * <li>ダイアログメッセージ（エラー）: DIALOG_ERROR_で始まるもの</li>
 * <li>ダイアログメッセージ（確認）: DIALOG_CONFIRM_で始まるもの</li>
 * <li>ダイアログメッセージ（完了通知）: DIALOG_COMPLETION_で始まるもの</li>
 * </ul>
 * 
 * <p>
 * 使用例：
 * </p>
 * 
 * <pre>
 * // 通常のメッセージ取得
 * String errorTitle = MessageEnum.DIALOG_ERROR_TITLE.getMessage();
 * 
 * // パラメータを含むメッセージのフォーマット
 * String addedMsg = MessageEnum.DIALOG_COMPLETION_ENGINEER_ADDED.format("ID00001", "山田太郎");
 * // 結果: "エンジニア情報を追加しました: ID=ID00001, 名前=山田太郎"
 * </pre>
 *
 * @author Nakano
 * @version 4.0.0
 * @since 2025-04-15
 */
public enum MessageEnum {

    // ----- バリデーションエラーメッセージ -----
    /**
     * 必須項目未入力時のバリデーションエラーメッセージ。
     * ユーザーに対して必須項目の入力を促すメッセージ
     */
    VALIDATION_ERROR_REQUIRED("*は必須項目になります"),

    /**
     * 氏名入力エラー時のバリデーションエラーメッセージ。
     * ユーザーに対して氏名の適切な入力を促すメッセージです。
     * 氏名は必須項目であり、20文字以内で入力することが求められます。
     */
    VALIDATION_ERROR_NAME("*は必須項目になります。または20文字以内で入力してください"),

    /**
     * フリガナ入力エラー時のバリデーションエラーメッセージ。
     * ユーザーに対してフリガナの適切な入力を促すメッセージです。
     * フリガナは必須項目であり、20文字以内のカタカナで入力することが求められます。
     */
    VALIDATION_ERROR_NAME_KANA("*は必須項目になります。またはフリガナを20文字以内で入力してください"),

    /**
     * 社員ID入力エラー時のバリデーションエラーメッセージ。
     * ユーザーに対して社員IDの適切な入力を促すメッセージです。
     * 社員IDは必須項目であり、既に登録されているID以外の5桁の数字を入力することが求められます。
     * ID00000は使用禁止
     */
    VALIDATION_ERROR_EMPLOYEE_ID("*は必須項目になります。または既に登録されているID以外を入力してください"),

    VALIDATION_ERROR_RESERVED_ID("ID00000は登録できません"),

    /**
     * 生年月日選択エラー時のバリデーションエラーメッセージ。
     * ユーザーに対して生年月日の選択を促すメッセージです。
     * 生年月日は必須項目です。
     */
    VALIDATION_ERROR_BIRTH_DATE("*は必須項目になります。項目を選択してください"),

    /**
     * 入社年月選択エラー時のバリデーションエラーメッセージ。
     * ユーザーに対して入社年月の選択を促すメッセージです。
     * 入社年月は必須項目です。
     */
    VALIDATION_ERROR_JOIN_DATE("*は必須項目になります。項目を選択してください"),

    /**
     * エンジニア歴選択エラー時のバリデーションエラーメッセージ。
     * ユーザーに対してエンジニア歴の選択を促すメッセージです。
     * エンジニア歴は必須項目です。
     */
    VALIDATION_ERROR_CAREER("*は必須項目になります。項目を選択してください"),

    /**
     * プログラミング言語選択エラー時のバリデーションエラーメッセージ。
     * ユーザーに対してプログラミング言語の選択を促すメッセージです。
     * プログラミング言語は必須項目であり、少なくとも1つ以上選択することが求められます。
     */
    VALIDATION_ERROR_PROGRAMMING_LANGUAGES("*は必須項目になります。1つ以上項目を選択してください"),

    /**
     * 経歴入力エラー時のバリデーションエラーメッセージ。
     * ユーザーに対して経歴の適切な入力を促すメッセージです。
     * 経歴は200文字以内で入力することが求められます。
     */
    VALIDATION_ERROR_CAREER_HISTORY("経歴は200文字以内で入力してください"),

    /**
     * 研修受講歴入力エラー時のバリデーションエラーメッセージ。
     * ユーザーに対して研修受講歴の適切な入力を促すメッセージです。
     * 研修受講歴は200文字以内で入力することが求められます。
     */
    VALIDATION_ERROR_TRAINING_HISTORY("研修の受講歴は200文字以内で入力してください"),

    /**
     * 備考入力エラー時のバリデーションエラーメッセージ。
     * ユーザーに対して備考の適切な入力を促すメッセージです。
     * 備考は500文字以内で入力することが求められます。
     */
    VALIDATION_ERROR_NOTE("備考は500文字以内で入力してください"),

    // ----- ダイアログメッセージ - エラー -----
    /**
     * エラーダイアログのタイトル。
     * エラーメッセージを表示するダイアログのウィンドウタイトルとして使用されます。
     */
    DIALOG_ERROR_TITLE("エラー"),

    /**
     * 入力検証エラー時のダイアログメッセージ。
     * 入力フォームの検証でエラーが検出された際に表示されるメッセージです。
     */
    DIALOG_ERROR_VALIDATION("入力内容に誤りがあります"),

    /**
     * ファイルアクセスエラー時のダイアログメッセージ。
     * CSVファイルなどへのアクセスに失敗した際に表示されるメッセージです。
     */
    DIALOG_ERROR_FILE_ACCESS("ファイルアクセスエラーが発生しました"),

    /**
     * データ読み込みエラー時のダイアログメッセージ。
     * CSVファイルからのデータ読み込みに失敗した際に表示されるメッセージです。
     */
    DIALOG_ERROR_DATA_LOAD("データの読み込みに失敗しました"),

    /**
     * データ保存エラー時のダイアログメッセージ。
     * エンジニア情報のCSVファイルへの保存に失敗した際に表示されるメッセージです。
     */
    DIALOG_ERROR_DATA_SAVE("データの保存に失敗しました"),

    /**
     * システムエラー時のダイアログメッセージ。
     * アプリケーション内で予期しないエラーが発生した際に表示されるメッセージです。
     */
    DIALOG_ERROR_SYSTEM("システムエラーが発生しました"),

    /**
     * 重複ID検出時のダイアログメッセージ。
     * 新規登録時に既に存在する社員IDが指定された際に表示されるメッセージです。
     */
    DIALOG_ERROR_DUPLICATE_ID("すでに使用されているIDです"),

    /**
     * 入力形式不正時のダイアログメッセージ。
     * 入力データの形式が不正な場合に表示されるメッセージです。
     */
    DIALOG_ERROR_INVALID_FORMAT("入力形式が正しくありません"),

    // ----- ダイアログメッセージ - 確認 -----
    /**
     * 確認ダイアログのタイトル。
     * ユーザーに確認を求めるダイアログのウィンドウタイトルとして使用されます。
     */
    DIALOG_CONFIRM_TITLE("確認"),

    /**
     * 保存確認時のダイアログメッセージ。
     * 変更をファイルに保存する前にユーザーの確認を求めるメッセージです。
     */
    DIALOG_CONFIRM_SAVE("変更を保存しますか？"),

    /**
     * 更新確認時のダイアログメッセージ。
     * エンジニア情報を更新する前にユーザーの確認を求めるメッセージです。
     */
    DIALOG_CONFIRM_UPDATE("情報を更新しますか？"),

    /**
     * 削除確認時のダイアログメッセージ。
     * エンジニア情報を削除する前にユーザーの確認を求めるメッセージです。
     */
    DIALOG_CONFIRM_DELETE("この情報を削除しますか？"),

    /**
     * キャンセル確認時のダイアログメッセージ。
     * 操作をキャンセルする前にユーザーの確認を求めるメッセージです。
     * 未保存の変更がある場合、それらが失われる可能性があることを警告します。
     */
    DIALOG_CONFIRM_CANCEL("操作をキャンセルしますか？未保存の変更は失われます"),

    /**
     * 終了確認時のダイアログメッセージ。
     * アプリケーションを終了する前にユーザーの確認を求めるメッセージです。
     */
    DIALOG_CONFIRM_EXIT("アプリケーションを終了しますか？"),

    /**
     * CSVエクスポート確認時のダイアログメッセージ。
     * エンジニア情報をCSVファイルにエクスポートする前にユーザーの確認を求めるメッセージです。
     */
    DIALOG_CONFIRM_EXPORT_CSV("CSVをエクスポートしますか？"),

    // ----- ダイアログメッセージ - 完了通知 -----
    /**
     * 完了ダイアログのタイトル。
     * 操作の成功を通知するダイアログのウィンドウタイトルとして使用されます。
     */
    DIALOG_COMPLETION_TITLE("完了"),

    /**
     * 保存完了時のダイアログメッセージ。
     * データの保存が成功した際に表示されるメッセージです。
     */
    DIALOG_COMPLETION_SAVE("保存が完了しました"),

    /**
     * 更新完了時のダイアログメッセージ。
     * エンジニア情報の更新が成功した際に表示されるメッセージです。
     */
    DIALOG_COMPLETION_UPDATE("更新が完了しました"),

    /**
     * 削除完了時のダイアログメッセージ。
     * エンジニア情報の削除が成功した際に表示されるメッセージです。
     */
    DIALOG_COMPLETION_DELETE("削除が完了しました"),

    /**
     * CSVエクスポート完了時のダイアログメッセージ。
     * CSVファイルへのエクスポートが成功した際に表示されるメッセージです。
     */
    DIALOG_COMPLETION_EXPORT_CSV("CSVのエクスポートが完了しました"),

    /**
     * CSVインポート完了時のダイアログメッセージ。
     * CSVファイルからのインポートが成功した際に表示されるメッセージです。
     */
    DIALOG_COMPLETION_IMPORT_CSV("CSVのインポートが完了しました"),

    /**
     * エンジニア情報追加完了時のダイアログメッセージ。
     * パラメータ:
     * %s - エンジニアID
     * %s - エンジニア名
     */
    DIALOG_COMPLETION_ENGINEER_ADDED("エンジニア情報を追加しました: ID=%s, 名前=%s");

    /**
     * メッセージテキスト。
     * 列挙型の各要素に対応するメッセージ文字列を保持します。
     */
    private final String message;

    /**
     * コンストラクタ。
     * 各列挙型要素にメッセージテキストを関連付けます。
     * 
     * @param message メッセージテキスト
     */
    MessageEnum(String message) {
        this.message = message;
    }

    /**
     * メッセージテキストを取得します。
     * プレースホルダーなしの単純なメッセージテキストを返します。
     * 
     * @return メッセージテキスト
     */
    public String getMessage() {
        return this.message;
    }

    /**
     * フォーマット済みのメッセージテキストを取得します。
     * メッセージ内の「%s」や「%d」などのプレースホルダーが引数の値で置換されます。
     * 
     * <p>
     * このメソッドは、動的な情報を含むメッセージを表示したい場合に使用します。
     * 例えば、特定のエンジニアIDや名前を含むメッセージなどです。
     * </p>
     * 
     * <p>
     * 例：
     * </p>
     * 
     * <pre>
     * String msg = MessageEnum.DIALOG_COMPLETION_ENGINEER_ADDED.format("ID001", "山田太郎");
     * // 結果: "エンジニア情報を追加しました: ID=ID001, 名前=山田太郎"
     * </pre>
     * 
     * @param args フォーマット引数（可変長）
     * @return フォーマット済みメッセージテキスト
     * @throws java.util.IllegalFormatException フォーマット文字列が不正か、引数の数や型が合わない場合
     */
    public String format(Object... args) {
        if (args == null || args.length == 0) {
            // 引数がなければそのままメッセージを返す
            return this.message;
        }

        try {
            return String.format(this.message, args);
        } catch (java.util.IllegalFormatException e) {
            // フォーマットエラーの場合は基本メッセージと警告を返す
            return this.message + " [フォーマットエラー]";
        }
    }
}
